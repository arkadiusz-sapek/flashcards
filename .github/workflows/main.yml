name: Deploy to staging

on:
  workflow_dispatch:

env:
  REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}

jobs:
  deploy-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Load secrets and save to app.env
        run: aws secretsmanager get-secret-value --secret-id simple_bank --query SecretString --output text | jq -r 'to_entries|map("\(.key)=\(.value)")|.[]' > app.env

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: flashcards
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -f devtools/dockerfiles/backend/Dockerfile.dev -t flashcards:latest .
          docker tag flashcards:latest 429572539595.dkr.ecr.eu-central-1.amazonaws.com/flashcards:latest
          docker push 429572539595.dkr.ecr.eu-central-1.amazonaws.com/flashcards:latest

  deploy-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache modules
        uses: actions/cache@v1
        id: yarn-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Install dependencies
        working-directory: ./frontend
        run: yarn
      - name: Build
        working-directory: ./frontend
        run: yarn build
      - name: Deploy
        working-directory: ./frontend
        run: aws s3 sync ./build s3://flashcards-frontend
